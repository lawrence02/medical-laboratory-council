entity Survivor {
	/**
	* The survivorId attribute.
	*/
    practitionerType PractitionerType,
    registrationNumber String required,
    title Title,
    surname String required,
    forenames String required,
    previousSurname String,
    dob LocalDate required,
    gender Gender required,
    
    placeOfBirthTown String,
    placeOfBirthCountry String,
    nationality String,
    nationalId String,
    maritalStatus MaritalStatus,
    residentialAddress1 String,
    residentialAddress2 String,
    residentialAddress3 String,
    homePhone String,
    workPhone String,
    cellPhone String,
    emailAddress String,
    nameOfPlaceOfEmployment String,
    employerAddress String,
    employerEmail String,
    dateOfEmployment String,
    //areaOfEmployment AreaOfEmployment,
    //employmentStatus EmploymentStatus,
    //typeOfInstitution TypeOfInstitution,
    //provinceEmployed Province,
    reasonForNonEmployment String,
    dateOfApplication String,
    //signature File,
    applicationFee String,
    status String,
    reasonNotApproved String
}

entity Resource {
	/**
	* The survivorId attribute.
	*/
	resourceType ResourceType,
	quantity String
	
}

enum Gender {
    Male, Female, Unknown
}
enum MaritalStatus {
    Married, Single, Other
}

enum Title {
    Mr, Mrs, Miss, Ms, Dr
}
enum InfectionStatus {
    Normal, Infected, Contaminated
}

enum ResourceType {
    Water, Food, Medication, Ammunition
}

enum PractitionerType {
    ClinicalScientist,
	MedicalResearchScientist,
	MedicalLaboratoryScientist,
	MedicalLaboratoryTechnician,
	StateCertifiedTechnician,
	State Certified Blood Bank Technician,
	Cytotechnician,
	MedicalLaboratoryTechnician,
	POCTester
}


// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Survivor to Resource{survivor}

}


paginate Survivor with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 

// Set an angular suffix
// angularSuffix * with mySuffix
